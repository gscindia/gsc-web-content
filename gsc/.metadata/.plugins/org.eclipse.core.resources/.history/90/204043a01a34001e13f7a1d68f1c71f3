package org.gsc.medha.repository;

import java.util.List;

import org.gsc.medha.entity.Candidate;
import org.gsc.medha.entity.Exam;
import org.gsc.medha.entity.School;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;

public interface CandidateRepository extends CrudRepository<Candidate, Integer> {

	@Query("Select MAX(c.roll) from Candidate c where c.section=?1 and c.exam=?2 and c.status='ACTIVE'")
	public Integer getLatestRoll(Integer cls, Exam exam);

	@Query("Select c from Candidate c where c.school=?1 and c.section=?2 and c.exam=?3")
	public List<Candidate> getAllStudent(School school, int section, Exam exam);
	
	@Query("Select c from Candidate c where c.school=?1 and c.exam=?2 and c.status=?3")
	public List<Candidate> getAllStudent(School school, Exam exam, String status);

	@Query("Select c from Candidate c where c.school=?1 and c.section=?2 and c.exam=?3 and c.status=?4")
	public List<Candidate> getAllStudent(School school, int section, Exam exam, String status);

	@Query("Select c from Candidate c where c.section=?1 and c.exam=?2")
	public List<Candidate> getAllStudent(int section, Exam exam);

	@Query("Select c from Candidate c where c.section=?1 and c.exam=?2 and c.status=?3")
	public List<Candidate> getAllStudent(int section, Exam exam, String status);

	@Query("Select c from Candidate c where  c.exam=?1")
	public List<Candidate> getAllStudent(Exam exam);

	@Query("Select c from Candidate c where  c.exam=?1 and c.status=?2")
	public List<Candidate> getAllStudent(Exam exam, String status);

	@Query("Select c from Candidate c where  c.school=?1")
	public List<Candidate> getAllStudent(School school);

	@Query("Select c from Candidate c where  c.school=?1 and c.status=?2")
	public List<Candidate> getAllStudent(School school, String status);
	
	@Query("Select c from Candidate c where  c.id=?")
	public List<Candidate> getStudent( int id);

}
