package org.gsc.medha.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.gsc.medha.entity.Candidate;
import org.gsc.medha.entity.School;
import org.gsc.medha.repository.SchoolRepository;
import org.gsc.medha.service.ExamService;
import org.gsc.medha.service.SchoolService;
import org.gsc.page.form.SchoolForm;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class DefaultSchoolService implements SchoolService {

	@Autowired
	SchoolRepository schoolRepo;
	@Autowired
	ExamService examService;
	
	
	@Override
	public School add(School school) {
		
	}

	@Override
	public List<School> getAllSchool() {

		List<School> schools = new ArrayList<>();
		schoolRepo.findAll().forEach(schools::add);
		return schools;
	}
	

	@Override
	public School findBySchoolName(String name) {
		School school = (School) schoolRepo.findBySchoolName(name).get(0);
		return school;
	}

	@Override
	public School getSchoolById(int id) {
		Optional<School> school = schoolRepo.findById(id);
		return school.isPresent() ? school.stream().collect(Collectors.toList()).get(0) : null;
	}

	@Override
	public List<Candidate> getFormA(Candidate candidate) {

		return schoolRepo.filterFormA(candidate.getSchool(), examService.getActiveExam());
	}
	@Override
	public List<Candidate> getFormAByExam(Candidate candidate) {
		
		return schoolRepo.filterFormA(candidate.getSchool(), candidate.getExam());
	}

}
